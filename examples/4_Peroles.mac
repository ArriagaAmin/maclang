execonce "String.mac";

union perolValue {
	Bool b;
	Char c;
	Int i;
	Char[100] s;
}

register Perol {
	Int tipo;
	perolValue val;
}

dec holandSort(Perol[] peroles, Int N);

let Perol[20] peroles;
let Int N, i;
let Char option;

while True do 
	print("Desea organizar los peroles? [Y\n] ");
	option = readc();
	if option == 'n' || option == 'N' then 
		print("Hasta luego!");
		break;
	done 

	print("Indique el numero de peroles a organizar: ");
	N = readi();

	if N > 20 then 
		print("No se pueden organizar mas de 20 peroles.");
		continue;
	done

	i = 0;
	while i < N do 
		print("Indique el tipo del perol: ");
		print("1. Booleano");
		print("2. Caracter");
		print("3. Entero");
		print("4. String");
		N = readi();
		peroles[i].tipo = N;

		if N == 1 then 
			print("El valor del perol es True? [Y/n] ");
			option == readc();
			peroles[i].val.b = option != 'n' && option != 'N';

		elsif N == 2 then 
			print("Indique el caracter: ");
			peroles[i].val.c = readc();

		elsif N == 3 then 
			print("Indique el entero: ");
			peroles[i].val.i = readi();

		elsif N == 4 then 
			print("Indique el string: ");
			read(peroles[i].val.s);

		else 
			print("Tipo invalido");
			i = i - 1;
		done 
		i = i + 1;
	done

	holandSort(peroles, N);

	print("%cImprimimos los peroles ordenados:", chars=['\n']);
	for (i; 0; N) do 
		if peroles[i].tipo == 1 then 
			print("BOOL: ", end="");
			if peroles[i].val.b then print("True"); done
			print("False");

		elsif peroles[i].tipo == 2 then 
			print("CHAR: %c", chars=[peroles[i].val.c]);

		elsif peroles[i].tipo == 3 then 
			print("INT: %i", ints=[peroles[i].val.i]);

		else 
			print("STRING: %f", strings=[peroles[i].val.s]);
		done 
	done
done


def holandSort(Perol[] peroles, Int N) {
	let Int l = 0, m = 0, r = N-1;
	let Perol aux;

	while m <= r do 
		if peroles[m].tipo == 1 then 
			aux = peroles[m];
			peroles[m] = peroles[l];
			peroles[l] = aux;
			l = l + 1;
			m = m + 1;
		elsif peroles[m].tipo == 4 then 
			aux = peroles[m];
			peroles[m] = peroles[r];
			peroles[r] = aux;
			r = r - 1;
		else 
			m = m + 1;
		done
	done  

	while l <= r do 
		if peroles[l].tipo == 2 then 
			l = l + 1;
		else
			aux = peroles[l];
			peroles[l] = peroles[r];
			peroles[r] = aux;
			r = r - 1;
		done
	done
}
