execonce "String.mac";

dec gauss(Float[][] M, Int N) => Bool;

let Float[10][11] M;
let Int N;
let Char c;

while True do 
	print("Desea resolver un sistema de ecuaciones? [Y/n] ");
	c = readc();
	if c == 'n' || c == 'N' then 
		print("Hasta luego!");
		break;
	done 

	print("Indique el numero de ecuaciones. Debe ser entre 1 y 10: ");
	N = readi();

	for (i; 0; N) do 
		print(
			"Indique los %i coeficientes flotantes de la %i-esima ecuacion:", 
			ints=[N+1, i]
		);

		for (j; 0; N+1) do 
			M[i][j] = readf();
		done 
	done

	if gauss(M, N) then 
		print("El valor de las variables es: ");

		for (i; 0; N) do 
			print("X%i = %f", ints=[i], floats=[M[i][N]]);
		done 
	else 
		print("El sistema de ecuaciones no tiene solucion.");
	done

	print(nl);
done 



def abs(Float x) => Float {
	if x < 0 then return -x;
	else return x;
	done 
}

def argmax_col(Float[][] M, Int N, Int col) => Int {
	let Float max = abs(M[0][col]);
	let Int i_max = 0;

	for (i; 1; N) do 
		if abs(M[i][col]) > max then 
			max = abs(M[i][col]); 
			i_max = i;
		done 
	done 

	return i_max;

}

def swap_rows(Float[][] M, Int N, Int h, Int k) {
	let Float aux;

	for (i; 0; N) do 
		aux = M[h][i];
		M[h][i] = M[k][i];
		M[k][i] = aux;
	done
}

def gauss(Float[][] M, Int N) => Bool {
	let Int i_max;
	let Float f;

	for (h; 0; N) do 
		i_max = argmax_col(M, N, h);

		if M[i_max][h] == 0 then 
			return False;
		done 

		swap_rows(M, N + 1, h, i_max);

		for (i; h+1; N) do 
			f = M[i][h] / M[h][h];

			for (j; h+1; N+1) do 
				M[i][j] = M[i][j] - M[h][j] * f ;
			done 
		done 
	done 

	for (h; N-1; -1; -1) do 
		for (i; 0; h) do 
			M[i][N] = M[i][N] - M[h][N] * M[i][h] / M[h][h];
		done 
		M[h][N] = M[h][N] / M[h][h];
	done
}